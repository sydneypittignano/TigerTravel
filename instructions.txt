Making this to remind myself how to get started

STARTING WORK:
1. Open two terminals
2. cd into TigerTravel on both
3. Activate the postgres server (doesn't matter where):
    pg_ctl -D /usr/local/var/postgres start
4. In one terminal, start the server for our app and specify a port
    python runserver.py [port]
5. In the other terminal, run the app with the same port
    python tigertravel.py [port]
6. On a web browser, navigate to
    localhost:[port]
7. Get to work!


ENDING WORK:
1. Ctrl+C in the terminal where the server is running
2. Deactivate virtual environments in both terminals
3. Stop the postgres server
    pg_ctl -D /usr/local/var/postgres stop


FILES:
runserver.py:
- will automatically start a flask server when it calls app.run

sql file:
- Text file that, when run, will create a local Postgres database
EXPORTING to this file:
$ pg_dump bookstore bookstore.sql
$ 

CREATING THE DB from this file:
$ psql -h localhost -p 5432 -U rmd -d bookstore
bookstore=> drop table authors;
bookstore=> drop table books;
bookstore=> drop table customers;
bookstore=> drop table orders;
bookstore=> drop table zipcodes;
bookstore=> \q
$ psql -h localhost -p 5432 -U rmd -d bookstore < bookstore.sql
$

database.py:
- will house our methods that query the database
- right now only has a search students method

tigertravel.py
- the actual app
- right now heavily copied off Penny

display.py:
- not used in our app, but useful for debugging (prints the database)

html files:
- one for each page (index, searchform, searchresults)
- some might be pieces (header, footer) to include in larger files